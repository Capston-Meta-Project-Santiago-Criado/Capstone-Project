// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}

model Company {
  id                  Int         @id @default(autoincrement())
  name                String
  ticker              String
  cik_number          Int         @unique
  daily_price         Int
  created_at          DateTime    @default(now())
  documents           Document[] 
  articles            Article[]
  industry            Industry?  @relation(fields: [industryId], references: [id])
  industryId          Int?
  description         String  @default("")
}

  model User { 
    id              Int    @id @default(autoincrement())
    username        String  @unique
    name            String
    email           String  @unique 
    password        String      
    search_history  Int[] 
    portfolios      Portfolio[]
    interestedIndustries      Int[] 
    sectors         Int[] 
    industryWeights Float[] 
    sectorWeights   Float[]
  }

  model Document {
    id          Int       @id @default(autoincrement())
    type        String   
    url         String    @unique 
    filed_date  DateTime
    company     Company   @relation(fields: [companyId], references: [id])
    companyId   Int
}

model Article { 
    id          Int @id @default(autoincrement())
    link        String @unique
    source      String 
    title       String 
    summary     String 
    publishDate DateTime 
    language    String 
    images      String[]
    company     Company   @relation(fields: [companyId], references: [id])
    companyId   Int
    created_at  DateTime    @default(now())
}

model Portfolio { 
    id          Int @id @default(autoincrement())
    name        String
    description  String 
    companiesIds   Int[] 
    created_at  DateTime    @default(now())
    user        User  @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      Int
    permittedUsers  Int[] 
    isPublic    Boolean @default(false)
}

model Sector { 
  id            Int @id @default(autoincrement()) 
  name          String @unique 
  industries    Industry[] 
}

model Industry{ 
  id            Int @id @default(autoincrement()) 
  name          String @unique 
  sectorId      Int 
  sector        Sector @relation(fields:[sectorId], references: [id])
  companies     Company[] 
}